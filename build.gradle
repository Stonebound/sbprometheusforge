plugins {
    id 'dev.architectury.loom' version '1.6-SNAPSHOT' apply false
    id 'architectury-plugin' version '3.4-SNAPSHOT'
    id 'com.github.johnrengelman.shadow' version '8.1.1' apply false
}

architectury {
    minecraft = project.minecraft_version
}

allprojects {
    group = rootProject.maven_group
    version = rootProject.mod_version
}

subprojects {
    apply plugin: 'dev.architectury.loom'
    apply plugin: 'architectury-plugin'
    apply plugin: 'maven-publish'

    base {
        // Set up a suffixed format for the mod jar names, e.g. `example-fabric`.
        archivesName = "$rootProject.archives_name-$project.name"
    }

    repositories {
        // Add repositories to retrieve artifacts from in here.
        // You should only use this when depending on other mods because
        // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
        // See https://docs.gradle.org/current/userguide/declaring_repositories.html
        // for more information about repositories.
    }

    loom {
        silentMojangMappingsLicense()
    }

    dependencies {
        minecraft "net.minecraft:minecraft:$rootProject.minecraft_version"
        mappings loom.officialMojangMappings()

        implementation include("io.prometheus:simpleclient:0.14.1")
        implementation include("io.prometheus:simpleclient_httpserver:0.14.1")
        implementation include("io.prometheus:simpleclient_common:0.14.1")
        implementation include("io.prometheus:simpleclient_hotspot:0.14.1")
        implementation ("com.electronwill.night-config:core:3.6.4")
        implementation ("com.electronwill.night-config:toml:3.6.4")




        tasks.withType(ProcessResources).configureEach {
            var replaceProperties = [
                    minecraft_version      : minecraft_version,
                    mod_id                 : mod_id,
                    mod_name               : mod_name,
                    mod_license            : mod_license,
                    mod_version            : mod_version,
                    mod_authors            : mod_authors,
                    mod_description        : mod_description,
                    maven_group            : maven_group,
                    mod_contact           : mod_contact,
                    mod_git                : mod_git,

                    //Quilt
                    quilt_architectury    : quilt_architectury,
                    quilt_minecraft       : quilt_minecraft,
                    quilt_quiltloader     : quilt_quiltloader,
                    quilt_quiltbase       : quilt_quiltbase,

                    //Fabric
                    fabric_fabricloader   : fabric_fabricloader,
                    fabric_minecraft      : fabric_minecraft,
                    fabric_java           : fabric_java,
                    fabric_architectury   : fabric_architectury,
                    fabric_fabricapi      : fabric_fabricapi,

                    //ForgeLikes
                    forge_loaderversion    : forge_loaderversion,
                    forge_loaderrange      : forge_loaderrange,
                    forge_forgeside        : forge_forgeside,
                    forge_minecraftrange   : forge_minecraftrange,
                    forge_architecturyrange: forge_architecturyrange,
                    forge_architecturyside : forge_architecturyside,

                    //NeoForge
                    neoforge_loaderversion : neoforge_loaderversion,
                    neoforge_loaderrange   : neoforge_loaderrange,
                    neoforge_neoforgeside   : neoforge_neoforgeside,
                    neoforge_minecraftrange: neoforge_minecraftrange,
                    neoforge_architecturyrange: neoforge_architecturyrange,
                    neoforge_architecturyside: neoforge_architecturyside



            ]
            inputs.properties replaceProperties

            filesMatching(['META-INF/mods.toml', 'quilt.mod.json', 'fabric.mod.json']  ) {
                expand replaceProperties
            }
        }
    }

    java {
        // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
        // if it is present.
        // If you remove this line, sources will not be generated.
        withSourcesJar()

        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    tasks.withType(JavaCompile).configureEach {
        it.options.release = 17
    }

    // Configure Maven publishing.
    publishing {
        publications {
            mavenJava(MavenPublication) {
                artifactId = base.archivesName.get()
                from components.java
            }
        }

        // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
        repositories {
            // Add repositories to publish to here.
            // Notice: This block does NOT have the same function as the block in the top level.
            // The repositories here will be used for publishing your artifact, not for
            // retrieving dependencies.
        }
    }
}
